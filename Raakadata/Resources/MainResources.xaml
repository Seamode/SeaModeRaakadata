<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <SolidColorBrush x:Key="RedBrush" Color="Red"/>
  <SolidColorBrush x:Key="SolidBorderBrush" Color="#888"/>
  <SolidColorBrush x:Key="GreenBrush" Color="Green"/>

  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
  <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>
  <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>

  <SolidColorBrush x:Key="IsCheckedBackgroundBrush" Color="#EEE"/>
  <SolidColorBrush x:Key="IsCheckedBorderBrush" Color="#AAA"/>
  <SolidColorBrush x:Key="IsCheckedForegroundBrush" Color="#FFC8C8C8"/>

  <LinearGradientBrush x:Key="NormalRedBrush" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
    <GradientStop Color="#FFC8C8C8" Offset="0"/>
    <GradientStop Color="#FF820000" Offset="0.9"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="NormalBlueBrush" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
    <GradientStop Color="#FFC8C8C8" Offset="0"/>
    <GradientStop Color="#FF000082" Offset="0.9"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="NormalGreenBrush" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
    <GradientStop Color="#FFC8C8C8" Offset="0"/>
    <GradientStop Color="#FF008200" Offset="0.9"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="NormalYellowBrush" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
    <GradientStop Color="#FFC8C8C8" Offset="0"/>
    <GradientStop Color="#FF828200" Offset="0.9"/>
  </LinearGradientBrush>

  <Style TargetType="{x:Type TextBox}">
    <Style.Triggers>
      <Trigger Property="Validation.HasError" Value="true">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
        <Setter Property="Control.Background" Value="Pink" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{x:Null}">
  </Style>

  <Style x:Key="MLB_Separator" TargetType="{x:Type Separator}">
    <Setter Property="Margin" Value="0,3,0,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Grid>
            <Rectangle Height="1" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MLB_MenuItem" TargetType="{x:Type MenuItem}">
    <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border x:Name="Border"
                     Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}">

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition x:Name="Col3" Width="14"/>
              </Grid.ColumnDefinitions>
              <!-- ContentPresenter to show an Icon if needed -->
              <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
              <!-- Glyph is a checkmark if needed for a checkable menu -->
              <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
              </Grid>
              <!-- Content for the menu text etc -->
              <ContentPresenter Grid.Column="1"
                                        Margin="{TemplateBinding Padding}"
                                          x:Name="HeaderHost"
                                          RecognizesAccessKey="True"
                                         ContentSource="Header"/>
              <!-- Content for the menu IGT -->
              <ContentPresenter Grid.Column="2"
                                         Margin="8,1,8,1"
                                          x:Name="IGTHost"
                                          ContentSource="InputGestureText"
                                        VerticalAlignment="Center"/>

              <!-- Arrow drawn path which points to the next level of the menu -->
              <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
              </Grid>
              <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
              <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{StaticResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Border x:Name="SubMenuBorder" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" BorderThickness="1" Padding="2,2,2,2">
                  <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                    <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                  </Grid>
                </Border>
              </Popup>
            </Grid>
          </Border>
          <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
          <ControlTemplate.Triggers>
            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
            <Trigger Property="Role" Value="TopLevelHeader">
              <Setter Property="Padding" Value="6,1,6,1"/>
              <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
              <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
              <Setter Property="Width" Value="Auto" TargetName="Col3"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
            </Trigger>
            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
            <Trigger Property="Role" Value="TopLevelItem">
              <Setter Property="Padding" Value="6,1,6,1"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
            </Trigger>
            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
            <Trigger Property="Role" Value="SubmenuHeader">
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Padding" Value="0,2,0,2"/>
            </Trigger>
            <!-- Role = SubMenuItem : this is a child menu item which has children-->
            <Trigger Property="Role" Value="SubmenuItem">
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Padding" Value="0,2,0,2"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
              <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
            </Trigger>
            <!-- If no Icon is present the we collapse the Icon Content -->
            <Trigger Property="Icon" Value="{x:Null}">
              <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
            </Trigger>
            <!-- The GlyphPanel contains the CheckMark -->
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
            </Trigger>
            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
            <Trigger Property="IsHighlighted" Value="true">
              <Setter Property="Background" Value="LightGray" TargetName="Border"/>
              <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonStyleDarkGray" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FF404040" Offset="0"/>
                  <GradientStop Color="#FF232323" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FF404040" Offset="0"/>
                    <GradientStop Color="#FF232323" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FF232323" Offset="0"/>
                    <GradientStop Color="#FF232323" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonStyleDarkGrayTransparent" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.000000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <SolidColorBrush Color="Transparent"/>
                <!--LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FF404040" Offset="0"/>
                  <GradientStop Color="#FF232323" Offset="0.9"/>
                </LinearGradientBrush-->
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FF404040" Offset="0"/>
                    <GradientStop Color="#FF232323" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FF232323" Offset="0"/>
                    <GradientStop Color="#FF232323" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonStyleRed" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF820000" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FFC80000" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF3C0000" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonStyleBlue" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />
    <!--Setter Property="Padding" Value="0"/-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF000082" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF0000C8" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF00003C" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonStyleGreen" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF008200" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF00C800" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF003C00" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonStyleYellow" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF828200" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FFC8C800" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF3C3C00" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RepeatButtonStyleRed" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF820000" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FFC80000" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF3C0000" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RepeatButtonStyleBlue" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF000082" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF0000C8" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF00003C" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RepeatButtonStyleGreen" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF008200" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF00C800" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF003C00" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RepeatButtonStyleYellow" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF828200" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FFC8C800" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF3C3C00" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ToggleButtonStyleRed" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF820000" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FFC80000" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF3C0000" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF3C0000" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Background" Value="{StaticResource IsCheckedBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource IsCheckedBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource IsCheckedForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ToggleButtonStyleBlue" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF000082" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF0000C8" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF00003C" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF00003C" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <!--Setter Property="Background" Value="{StaticResource IsCheckedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource IsCheckedBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource IsCheckedForegroundBrush}"/-->
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ToggleButtonStyleGreen" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF008200" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF00C800" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF003C00" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF003C00" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Background" Value="{StaticResource IsCheckedBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource IsCheckedBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource IsCheckedForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ToggleButtonStyleGray" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="rectangleGrid">
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF828282" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7"/>
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FFC8C8C8" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF3C3C3C" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF3C3C3C" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Background" Value="{StaticResource IsCheckedBackgroundBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource IsCheckedBorderBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource IsCheckedForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SeaMODEButtonStyle3" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="Foreground" Value="#FFFFFF" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Rectangle Stroke="#FF570606" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                  <GradientStop Color="#FFC8C8C8" Offset="0"/>
                  <GradientStop Color="#FF00003C" Offset="0.9"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="rectangle" Property="Opacity" Value="0.7" />
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"  />
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF000082" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="rectangle">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FFC8C8C8" Offset="0"/>
                    <GradientStop Color="#FF000014" Offset="0.9"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type TabItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid>
            <Border 
            Name="Border"
            Margin="0,0,-4,0" 
            Background="{StaticResource NormalGreenBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}" 
            BorderThickness="1,1,1,1" 
            CornerRadius="2,12,0,0" >
              <ContentPresenter x:Name="ContentSite"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              ContentSource="Header"
              Margin="12,2,12,2"
              RecognizesAccessKey="True"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="100" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalRedBrush}" />
              <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ManouverGridStyle" TargetType="{x:Type DataGrid}" >
    <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
    <Setter Property="AlternatingRowBackground" Value="LightYellow"/>
    <Setter Property="AutoGenerateColumns" Value="False"/>
    <Setter Property="HeadersVisibility" Value="All"/>
    <Setter Property="CanUserAddRows" Value="False"/>
    <Setter Property="CanUserResizeColumns" Value="False"/>
    <Setter Property="CanUserSortColumns" Value="False"/>
    <Setter Property="CanUserReorderColumns" Value="False"/>
    <Setter Property="RowHeaderWidth" Value="0"/>
    <Setter Property="IsReadOnly" Value="True"/>
    <Setter Property="Height" Value="231"/>
    <Setter Property="Margin" Value="10,20,0,0" />
    <Setter Property="Width" Value="380"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <Setter Property="RowHeight" Value="20"/>
    <Setter Property="VerticalAlignment" Value="Top"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
  </Style>

  <Style x:Key="ManouverDataGridColumnHeadertyle" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Height" Value="30"/>
    <Setter Property="Background" Value="LightBlue"/>
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
  </Style>

  <Style x:Key="CellCenterAlign">
    <Setter Property="Control.HorizontalAlignment" Value="Center" />
  </Style>

</ResourceDictionary>
